# 2018-03-02 자료 저장 방법

# 딕셔너리는 키와 값으로 이루어져 있다

# 딕셔너리 생성 방법
temp_dict = {'one':1,'two':2,'three':3}
temp_dict = dict({'one':1,'two':2,'three':3})

hash('key')
# gash함수는 매개변수의 해시값을 구한다
# 해시 값이 실제 키가 된다

d = {}
# 딕셔너리 생성
d['k1'] = 'v1'
d['k2'] = 'v2'
d['k4'] = 'v4'
# 사전에 데이터를 저장하는 일반적인 방식

d['k1']
d['k2']
# d['k3'] 키가 없으면 오류
# 사전에서 데이터를 조회하는 일반적인 방식

# 사전에 키가 없는 값이 있으면 오류가 뜨기 때문에 이런 오류를 방지하는 방법이 get메소드 사용하는 것
d.get('k1')
d.get('k3')
# get메소드를 사용하면 키가 없을때 None을 반환한다

del d['k1']
# 사전에서 해당하는 키 값과 값을 삭제한다

d.pop('k2')
# 딕셔너리에서 키에 해당하는 값을 가져오고 삭제한다
d.popitem()
# 저장된 아이텐의 키와 값을 한번에 반환한다

'k1' in d
'k2' in d
# 키 존재 여부 확인

list(d.keys())
# 키만 조회
list(d.values())
# 값만 조회
list(d.items())
# 전체 조회

d.clear()
# 해당 딕셔너리 전체 삭제 메소드

d.update('k1':'v1')
# 변경하려는 키가 기존 딕셔너리에 있으면 기존 값을 변경하고 없으면 추가한다


